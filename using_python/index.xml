<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>How Does a Database Work? In [Python] on Build a database in X</title><link>https://build-a-db.stanzheng.com/using_python/</link><description>Recent content in How Does a Database Work? In [Python] on Build a database in X</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://build-a-db.stanzheng.com/using_python/index.xml" rel="self" type="application/rss+xml"/><item><title>Part 1 - Introduction and Setting up the REPL</title><link>https://build-a-db.stanzheng.com/using_python/part1/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://build-a-db.stanzheng.com/using_python/part1/</guid><description>Writing a REPL that accepts input
./part1.py also accepts CLI python ./part1.py
db &amp;gt; $ foo Unrecognized command &#39;foo&#39;. $ .exit part1.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 #!/usr/bin/python3 import sys def print_prompt(): print(&amp;#34;db &amp;gt; &amp;#34;) def main(line=None): while True: print_prompt() user_input = line or input() if user_input == &amp;#34;.</description></item><item><title>Part 2 - World&#39;s Simplest SQL Compiler and Virtual Machine</title><link>https://build-a-db.stanzheng.com/using_python/part2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://build-a-db.stanzheng.com/using_python/part2/</guid><description>We&amp;rsquo;re making a clone of sqlite. The &amp;ldquo;front-end&amp;rdquo; of sqlite is a SQL compiler that parses a string and outputs an internal representation called bytecode.
See full explaination in C section.
./part2.py also accepts CLI python ./part2.py
db &amp;gt; $ foo Unrecognized command &#39;foo&#39;. db &amp;gt; $ select This is where we would do a select. Executed. db &amp;gt; $ insert This is where we would do an insert. Executed. $ .</description></item></channel></rss>